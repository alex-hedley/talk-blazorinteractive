{
  "event": {
    "formattedValues": [
      {
        "mimeType": "text/html",
        "value": "\r\n<div>\r\n    <div id='dotnet-interactive-this-cell-24481.Microsoft.DotNet.Interactive.Http.HttpPort' style='display: none'>\r\n        The below script needs to be able to find the current output cell; this is an easy method to get it.\r\n    </div>\r\n    <script type='text/javascript'>\r\nasync function probeAddresses(probingAddresses) {\r\n    function timeout(ms, promise) {\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                reject(new Error('timeout'))\r\n            }, ms)\r\n            promise.then(resolve, reject)\r\n        })\r\n    }\r\n\r\n    if (Array.isArray(probingAddresses)) {\r\n        for (let i = 0; i < probingAddresses.length; i++) {\r\n\r\n            let rootUrl = probingAddresses[i];\r\n\r\n            if (!rootUrl.endsWith('/')) {\r\n                rootUrl = `${rootUrl}/`;\r\n            }\r\n\r\n            try {\r\n                let response = await timeout(1000, fetch(`${rootUrl}discovery`, {\r\n                    method: 'POST',\r\n                    cache: 'no-cache',\r\n                    mode: 'cors',\r\n                    timeout: 1000,\r\n                    headers: {\r\n                        'Content-Type': 'text/plain'\r\n                    },\r\n                    body: probingAddresses[i]\r\n                }));\r\n\r\n                if (response.status == 200) {\r\n                    return rootUrl;\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n    }\r\n}\r\n\r\nfunction loadDotnetInteractiveApi() {\r\n    probeAddresses([\"http://192.168.12.30:9000/\", \"http://192.168.1.123:9000/\", \"http://127.0.0.1:9000/\"])\r\n        .then((root) => {\r\n        // use probing to find host url and api resources\r\n        // load interactive helpers and language services\r\n        let dotnetInteractiveRequire = require.config({\r\n        context: '24481.Microsoft.DotNet.Interactive.Http.HttpPort',\r\n                paths:\r\n            {\r\n                'dotnet-interactive': `${root}resources`\r\n                }\r\n        }) || require;\r\n\r\n            window.dotnetInteractiveRequire = dotnetInteractiveRequire;\r\n\r\n            window.configureRequireFromExtension = function(extensionName, extensionCacheBuster) {\r\n                let paths = {};\r\n                paths[extensionName] = `${root}extensions/${extensionName}/resources/`;\r\n                \r\n                let internalRequire = require.config({\r\n                    context: extensionCacheBuster,\r\n                    paths: paths,\r\n                    urlArgs: `cacheBuster=${extensionCacheBuster}`\r\n                    }) || require;\r\n\r\n                return internalRequire\r\n            };\r\n        \r\n            dotnetInteractiveRequire([\r\n                    'dotnet-interactive/dotnet-interactive'\r\n                ],\r\n                function (dotnet) {\r\n                    dotnet.init(window);\r\n                },\r\n                function (error) {\r\n                    console.log(error);\r\n                }\r\n            );\r\n        })\r\n        .catch(error => {console.log(error);});\r\n    }\r\n\r\n// ensure `require` is available globally\r\nif ((typeof(require) !==  typeof(Function)) || (typeof(require.config) !== typeof(Function))) {\r\n    let require_script = document.createElement('script');\r\n    require_script.setAttribute('src', 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js');\r\n    require_script.setAttribute('type', 'text/javascript');\r\n    \r\n    \r\n    require_script.onload = function() {\r\n        loadDotnetInteractiveApi();\r\n    };\r\n\r\n    document.getElementsByTagName('head')[0].appendChild(require_script);\r\n}\r\nelse {\r\n    loadDotnetInteractiveApi();\r\n}\r\n\r\n    </script>\r\n</div>"
      }
    ],
    "valueId": "ffc684b0-50e8-47d2-8bcc-8bd7f411874e"
  },
  "eventType": "DisplayedValueProduced",
  "command": {
    "token": "455e7c57-50a5-e39f-9701-cb540cb769c3::1",
    "id": "",
    "commandType": "SubmitCode",
    "command": {
      "code": "Console.WriteLine(\"Hello, World!\");",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": []
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": {
    "code": "\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n"
  },
  "eventType": "CodeSubmissionReceived",
  "command": {
    "token": "deferredCommand::c9572471bf1941b3a04f6f3e915bde7b",
    "id": "7077aaca8ffe4e8fba163c586f3e8196",
    "commandType": "SubmitCode",
    "command": {
      "code": "\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": ["kernel://pid-24481/csharp?tag=arrived"]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": {
    "code": "\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n"
  },
  "eventType": "CompleteCodeSubmissionReceived",
  "command": {
    "token": "deferredCommand::c9572471bf1941b3a04f6f3e915bde7b",
    "id": "7077aaca8ffe4e8fba163c586f3e8196",
    "commandType": "SubmitCode",
    "command": {
      "code": "\r\nusing static Microsoft.DotNet.Interactive.Kernel;\r\n",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": ["kernel://pid-24481/csharp?tag=arrived"]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": {
    "code": "\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n"
  },
  "eventType": "CodeSubmissionReceived",
  "command": {
    "token": "deferredCommand::bdd228e21d7d4f76936026c830cd2f1d",
    "id": "a36b7a5f0a0345eea2cb59dee2219c9a",
    "commandType": "SubmitCode",
    "command": {
      "code": "\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": ["kernel://pid-24481/csharp?tag=arrived"]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": {
    "code": "\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n"
  },
  "eventType": "CompleteCodeSubmissionReceived",
  "command": {
    "token": "deferredCommand::bdd228e21d7d4f76936026c830cd2f1d",
    "id": "a36b7a5f0a0345eea2cb59dee2219c9a",
    "commandType": "SubmitCode",
    "command": {
      "code": "\r\n#r \"/Users/alexhedley/.dotnet/tools/.store/microsoft.dotnet-interactive/1.0.416502/microsoft.dotnet-interactive/1.0.416502/tools/net7.0/any/Microsoft.DotNet.Interactive.Jupyter.dll\"\r\nusing Microsoft.DotNet.Interactive.Jupyter.Formatting;\r\n",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": ["kernel://pid-24481/csharp?tag=arrived"]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": { "code": "Console.WriteLine(\"Hello, World!\");" },
  "eventType": "CodeSubmissionReceived",
  "command": {
    "token": "455e7c57-50a5-e39f-9701-cb540cb769c3::1",
    "id": "",
    "commandType": "SubmitCode",
    "command": {
      "code": "Console.WriteLine(\"Hello, World!\");",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": [
      "kernel://pid-24481/?tag=arrived",
      "kernel://pid-24481/csharp?tag=arrived"
    ]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": { "code": "Console.WriteLine(\"Hello, World!\");" },
  "eventType": "CompleteCodeSubmissionReceived",
  "command": {
    "token": "455e7c57-50a5-e39f-9701-cb540cb769c3::1",
    "id": "",
    "commandType": "SubmitCode",
    "command": {
      "code": "Console.WriteLine(\"Hello, World!\");",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": [
      "kernel://pid-24481/?tag=arrived",
      "kernel://pid-24481/csharp?tag=arrived"
    ]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": {
    "formattedValues": [
      { "mimeType": "text/plain", "value": "Hello, World!\n" }
    ],
    "valueId": null
  },
  "eventType": "StandardOutputValueProduced",
  "command": {
    "token": "455e7c57-50a5-e39f-9701-cb540cb769c3::1",
    "id": "",
    "commandType": "SubmitCode",
    "command": {
      "code": "Console.WriteLine(\"Hello, World!\");",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": [
      "kernel://pid-24481/?tag=arrived",
      "kernel://pid-24481/csharp?tag=arrived"
    ]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}

{
  "event": { "executionOrder": 0 },
  "eventType": "CommandSucceeded",
  "command": {
    "token": "455e7c57-50a5-e39f-9701-cb540cb769c3::1",
    "id": "",
    "commandType": "SubmitCode",
    "command": {
      "code": "Console.WriteLine(\"Hello, World!\");",
      "submissionType": "run",
      "targetKernelName": "csharp",
      "originUri": null,
      "destinationUri": null
    },
    "routingSlip": [
      "kernel://pid-24481/?tag=arrived",
      "kernel://pid-24481/csharp?tag=arrived",
      "kernel://pid-24481/csharp",
      "kernel://pid-24481/"
    ]
  },
  "routingSlip": ["kernel://pid-24481/csharp", "kernel://pid-24481/"]
}
